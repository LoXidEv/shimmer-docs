[...new Array(6)].map((e,t)=>`[vp-content] h${t+1}`).join(",");const{entries:$}=Object,{fromEntries:st}=Object,nt="ENTRIES",D="KEYS",W="VALUES",_="";class F{set;_type;_path;constructor(t,s){const n=t._tree,o=Array.from(n.keys());this.set=t,this._type=s,this._path=o.length>0?[{node:n,keys:o}]:[]}next(){const t=this.dive();return this.backtrack(),t}dive(){if(this._path.length===0)return{done:!0,value:void 0};const{node:t,keys:s}=b(this._path);if(b(s)===_)return{done:!1,value:this.result()};const n=t.get(b(s));return this._path.push({node:n,keys:Array.from(n.keys())}),this.dive()}backtrack(){if(this._path.length===0)return;const t=b(this._path).keys;t.pop(),!(t.length>0)&&(this._path.pop(),this.backtrack())}key(){return this.set._prefix+this._path.map(({keys:t})=>b(t)).filter(t=>t!==_).join("")}value(){return b(this._path).node.get(_)}result(){switch(this._type){case W:return this.value();case D:return this.key();default:return[this.key(),this.value()]}}[Symbol.iterator](){return this}}const b=e=>e[e.length-1],ot=(e,t,s)=>{const n=new Map;if(typeof t!="string")return n;const o=t.length+1,r=o+s,i=new Uint8Array(r*o).fill(s+1);for(let c=0;c<o;++c)i[c]=c;for(let c=1;c<r;++c)i[c*o]=c;return q(e,t,s,n,i,1,o,""),n},q=(e,t,s,n,o,r,i,c)=>{const h=r*i;t:for(const u of e.keys())if(u===_){const d=o[h-1];d<=s&&n.set(c,[e.get(u),d])}else{let d=r;for(let a=0;a<u.length;++a,++d){const m=u[a],g=i*d,y=g-i;let l=o[g];const f=Math.max(0,d-s-1),w=Math.min(i-1,d+s);for(let p=f;p<w;++p){const C=m!==t[p],S=o[y+p]+ +C,I=o[y+p+1]+1,x=o[g+p]+1,k=o[g+p+1]=Math.min(S,I,x);k<l&&(l=k)}if(l>s)continue t}q(e.get(u),t,s,n,o,d,i,c+u)}};class z{_tree;_prefix;_size=void 0;constructor(t=new Map,s=""){this._tree=t,this._prefix=s}atPrefix(t){if(!t.startsWith(this._prefix))throw new Error("Mismatched prefix");const[s,n]=M(this._tree,t.slice(this._prefix.length));if(s===void 0){const[o,r]=L(n);for(const i of o.keys())if(i!==_&&i.startsWith(r)){const c=new Map;return c.set(i.slice(r.length),o.get(i)),new z(c,t)}}return new z(s,t)}clear(){this._size=void 0,this._tree.clear()}delete(t){return this._size=void 0,rt(this._tree,t)}entries(){return new F(this,nt)}forEach(t){for(const[s,n]of this)t(s,n,this)}fuzzyGet(t,s){return ot(this._tree,t,s)}get(t){const s=v(this._tree,t);return s!==void 0?s.get(_):void 0}has(t){return v(this._tree,t)?.has(_)??!1}keys(){return new F(this,D)}set(t,s){if(typeof t!="string")throw new Error("key must be a string");return this._size=void 0,E(this._tree,t).set(_,s),this}get size(){if(this._size)return this._size;this._size=0;const t=this.entries();for(;!t.next().done;)this._size+=1;return this._size}update(t,s){if(typeof t!="string")throw new Error("key must be a string");this._size=void 0;const n=E(this._tree,t);return n.set(_,s(n.get(_))),this}fetch(t,s){if(typeof t!="string")throw new Error("key must be a string");this._size=void 0;const n=E(this._tree,t);let o=n.get(_);return o===void 0&&n.set(_,o=s()),o}values(){return new F(this,W)}[Symbol.iterator](){return this.entries()}static from(t){const s=new z;for(const[n,o]of t)s.set(n,o);return s}static fromObject(t){return z.from(Object.entries(t))}}const M=(e,t,s=[])=>{if(t.length===0||e==null)return[e,s];for(const n of e.keys())if(n!==_&&t.startsWith(n))return s.push([e,n]),M(e.get(n),t.slice(n.length),s);return s.push([e,t]),M(void 0,"",s)},v=(e,t)=>{if(t.length===0||!e)return e;for(const s of e.keys())if(s!==_&&t.startsWith(s))return v(e.get(s),t.slice(s.length))},E=(e,t)=>{const s=t.length;t:for(let n=0;e&&n<s;){for(const r of e.keys())if(r!==_&&t[n]===r[0]){const i=Math.min(s-n,r.length);let c=1;for(;c<i&&t[n+c]===r[c];)++c;const h=e.get(r);if(c===r.length)e=h;else{const u=new Map;u.set(r.slice(c),h),e.set(t.slice(n,n+c),u),e.delete(r),e=u}n+=c;continue t}const o=new Map;return e.set(t.slice(n),o),o}return e},rt=(e,t)=>{const[s,n]=M(e,t);if(s!==void 0){if(s.delete(_),s.size===0)A(n);else if(s.size===1){const[o,r]=s.entries().next().value;R(n,o,r)}}},A=e=>{if(e.length===0)return;const[t,s]=L(e);if(t.delete(s),t.size===0)A(e.slice(0,-1));else if(t.size===1){const[n,o]=t.entries().next().value;n!==_&&R(e.slice(0,-1),n,o)}},R=(e,t,s)=>{if(e.length===0)return;const[n,o]=L(e);n.set(o+t,s),n.delete(o)},L=e=>e[e.length-1],it=(e,t)=>{const s=e._idToShortId.get(t);if(s!=null)return e._storedFields.get(s)},ct=/[\n\r\p{Z}\p{P}]+/u,j="or",N="and",ut="and_not",dt=(e,t)=>{e.includes(t)||e.push(t)},B=(e,t)=>{for(const s of t)e.includes(s)||e.push(s)},P=({score:e},{score:t})=>t-e,ht=()=>new Map,O=e=>{const t=new Map;for(const s of Object.keys(e))t.set(parseInt(s,10),e[s]);return t},G=(e,t)=>Object.prototype.hasOwnProperty.call(e,t)?e[t]:void 0,H={[j]:(e,t)=>{for(const s of t.keys()){const n=e.get(s);if(n==null)e.set(s,t.get(s));else{const{score:o,terms:r,match:i}=t.get(s);n.score=n.score+o,n.match=Object.assign(n.match,i),B(n.terms,r)}}return e},[N]:(e,t)=>{const s=new Map;for(const n of t.keys()){const o=e.get(n);if(o==null)continue;const{score:r,terms:i,match:c}=t.get(n);B(o.terms,i),s.set(n,{score:o.score+r,terms:o.terms,match:Object.assign(o.match,c)})}return s},[ut]:(e,t)=>{for(const s of t.keys())e.delete(s);return e}},lt=(e,t,s,n,o,r)=>{const{k:i,b:c,d:h}=r;return Math.log(1+(s-t+.5)/(t+.5))*(h+e*(i+1)/(e+i*(1-c+c*n/o)))},ft=e=>(t,s,n)=>({term:t,fuzzy:typeof e.fuzzy=="function"?e.fuzzy(t,s,n):e.fuzzy??!1,prefix:typeof e.prefix=="function"?e.prefix(t,s,n):e.prefix===!0,termBoost:typeof e.boostTerm=="function"?e.boostTerm(t,s,n):1}),J=(e,t,s,n)=>{for(const o of Object.keys(e._fieldIds))if(e._fieldIds[o]===s){e._options.logger("warn",`SlimSearch: document with ID ${e._documentIds.get(t)} has changed before removal: term "${n}" was not present in field "${o}". Removing a document after it has changed can corrupt the index!`,"version_conflict");return}},at=(e,t,s,n)=>{if(!e._index.has(n)){J(e,s,t,n);return}const o=e._index.fetch(n,ht),r=o.get(t),i=r?.get(s);!r||typeof i>"u"?J(e,s,t,n):i<=1?r.size<=1?o.delete(t):r.delete(s):r.set(s,i-1),e._index.get(n).size===0&&e._index.delete(n)},mt={k:1.2,b:.7,d:.5},gt={idField:"id",extractField:(e,t)=>e[t],tokenize:e=>e.split(ct),processTerm:e=>e.toLowerCase(),fields:void 0,searchOptions:void 0,storeFields:[],logger:(e,t)=>{console?.[e]?.(t)},autoVacuum:!0},Y={combineWith:j,prefix:!1,fuzzy:!1,maxFuzzy:6,boost:{},weights:{fuzzy:.45,prefix:.375},bm25:mt},pt={combineWith:N,prefix:(e,t,s)=>t===s.length-1},_t={batchSize:1e3,batchWait:10},K={minDirtFactor:.1,minDirtCount:20},yt={..._t,...K},U=Symbol("*"),wt=(e,t)=>{const s=new Map,n={...e._options.searchOptions,...t};for(const[o,r]of e._documentIds){const i=n.boostDocument?n.boostDocument(r,"",e._storedFields.get(o)):1;s.set(o,{score:i,terms:[],match:{}})}return s},Q=(e,t=j)=>{if(e.length===0)return new Map;const s=t.toLowerCase();if(!(s in H))throw new Error(`Invalid combination operator: ${t}`);return e.reduce(H[s])},T=(e,t,s,n,o,r,i,c,h,u=new Map)=>{if(r==null)return u;for(const d of Object.keys(i)){const a=i[d],m=e._fieldIds[d],g=r.get(m);if(g==null)continue;let y=g.size;const l=e._avgFieldLength[m];for(const f of g.keys()){if(!e._documentIds.has(f)){at(e,m,f,s),y-=1;continue}const w=c?c(e._documentIds.get(f),s,e._storedFields.get(f)):1;if(!w)continue;const p=g.get(f),C=e._fieldLength.get(f)[m],S=lt(p,y,e._documentCount,C,l,h),I=n*o*a*w*S,x=u.get(f);if(x){x.score+=I,dt(x.terms,t);const k=G(x.match,s);k?k.push(d):x.match[s]=[d]}else u.set(f,{score:I,terms:[t],match:{[s]:[d]}})}}return u},xt=(e,t,s)=>{const n={...e._options.searchOptions,...s},o=(n.fields??e._options.fields).reduce((l,f)=>({...l,[f]:G(n.boost,f)||1}),{}),{boostDocument:r,weights:i,maxFuzzy:c,bm25:h}=n,{fuzzy:u,prefix:d}={...Y.weights,...i},a=e._index.get(t.term),m=T(e,t.term,t.term,1,t.termBoost,a,o,r,h);let g,y;if(t.prefix&&(g=e._index.atPrefix(t.term)),t.fuzzy){const l=t.fuzzy===!0?.2:t.fuzzy,f=l<1?Math.min(c,Math.round(t.term.length*l)):l;f&&(y=e._index.fuzzyGet(t.term,f))}if(g)for(const[l,f]of g){const w=l.length-t.term.length;if(!w)continue;y?.delete(l);const p=d*l.length/(l.length+.3*w);T(e,t.term,l,p,t.termBoost,f,o,r,h,m)}if(y)for(const l of y.keys()){const[f,w]=y.get(l);if(!w)continue;const p=u*l.length/(l.length+w);T(e,t.term,l,p,t.termBoost,f,o,r,h,m)}return m},X=(e,t,s={})=>{if(t===U)return wt(e,s);if(typeof t!="string"){const d={...s,...t,queries:void 0},a=t.queries.map(m=>X(e,m,d));return Q(a,d.combineWith)}const{tokenize:n,processTerm:o,searchOptions:r}=e._options,i={tokenize:n,processTerm:o,...r,...s},{tokenize:c,processTerm:h}=i,u=c(t).flatMap(d=>h(d)).filter(d=>!!d).map(ft(i)).map(d=>xt(e,d,i));return Q(u,i.combineWith)},Z=(e,t,s={})=>{const{searchOptions:n}=e._options,o={...n,...s},r=X(e,t,s),i=[];for(const[c,{score:h,terms:u,match:d}]of r){const a=u.length||1,m={id:e._documentIds.get(c),score:h*a,terms:Object.keys(d),queryTerms:u,match:d};Object.assign(m,e._storedFields.get(c)),(o.filter==null||o.filter(m))&&i.push(m)}return t===U&&o.boostDocument==null||i.sort(P),i},zt=(e,t,s={})=>{s={...e._options.autoSuggestOptions,...s};const n=new Map;for(const{score:r,terms:i}of Z(e,t,s)){const c=i.join(" "),h=n.get(c);h!=null?(h.score+=r,h.count+=1):n.set(c,{score:r,terms:i,count:1})}const o=[];for(const[r,{score:i,terms:c,count:h}]of n)o.push({suggestion:r,terms:c,score:i/h});return o.sort(P),o};class bt{_options;_index;_documentCount;_documentIds;_idToShortId;_fieldIds;_fieldLength;_avgFieldLength;_nextId;_storedFields;_dirtCount;_currentVacuum;_enqueuedVacuum;_enqueuedVacuumConditions;constructor(t){if(!t?.fields)throw new Error('SlimSearch: option "fields" must be provided');const s=t.autoVacuum==null||t.autoVacuum===!0?yt:t.autoVacuum;this._options={...gt,...t,autoVacuum:s,searchOptions:{...Y,...t.searchOptions},autoSuggestOptions:{...pt,...t.autoSuggestOptions}},this._index=new z,this._documentCount=0,this._documentIds=new Map,this._idToShortId=new Map,this._fieldIds={},this._fieldLength=new Map,this._avgFieldLength=[],this._nextId=0,this._storedFields=new Map,this._dirtCount=0,this._currentVacuum=null,this._enqueuedVacuum=null,this._enqueuedVacuumConditions=K,this.addFields(this._options.fields)}get isVacuuming(){return this._currentVacuum!=null}get dirtCount(){return this._dirtCount}get dirtFactor(){return this._dirtCount/(1+this._documentCount+this._dirtCount)}get documentCount(){return this._documentCount}get termCount(){return this._index.size}toJSON(){const t=[];for(const[s,n]of this._index){const o={};for(const[r,i]of n)o[r]=Object.fromEntries(i);t.push([s,o])}return{documentCount:this._documentCount,nextId:this._nextId,documentIds:Object.fromEntries(this._documentIds),fieldIds:this._fieldIds,fieldLength:Object.fromEntries(this._fieldLength),averageFieldLength:this._avgFieldLength,storedFields:Object.fromEntries(this._storedFields),dirtCount:this._dirtCount,index:t,version:2}}addFields(t){for(let s=0;s<t.length;s++)this._fieldIds[t[s]]=s}}const kt=e=>new bt(e),It=({documentCount:e,nextId:t,fieldIds:s,averageFieldLength:n,dirtCount:o,version:r},i)=>{if(r!==2)throw new Error("SlimSearch: cannot deserialize an index created with an incompatible version");const c=kt(i);return c._documentCount=e,c._nextId=t,c._idToShortId=new Map,c._fieldIds=s,c._avgFieldLength=n,c._dirtCount=o??0,c._index=new z,c},Mt=(e,t)=>{const{index:s,documentIds:n,fieldLength:o,storedFields:r}=e,i=It(e,t);i._documentIds=O(n),i._fieldLength=O(o),i._storedFields=O(r);for(const[c,h]of i._documentIds)i._idToShortId.set(h,c);for(const[c,h]of s){const u=new Map;for(const d of Object.keys(h))u.set(parseInt(d,10),O(h[d]));i._index.set(c,u)}return i},V=(e,t)=>{const s=e.toLowerCase(),n=t.toLowerCase(),o=[];let r=0,i=0;const c=(u,d=!1)=>{let a;i===0?a=u.length>20?`… ${u.slice(-20)}`:u:d?a=u.length+i>100?`${u.slice(0,100-i)}… `:u:a=u.length>20?`${u.slice(0,20)} … ${u.slice(-20)}`:u,a&&o.push(a),i+=a.length,d||(o.push(["mark",t]),i+=t.length,i>=100&&o.push(" …"))};let h=s.indexOf(n,r);if(h===-1)return null;for(;h>=0;){const u=h+n.length;if(c(e.slice(r,h)),r=u,i>100)break;h=s.indexOf(n,r)}return i<100&&c(e.slice(r),!0),o},Ot=(e,t)=>t.contents.reduce((s,[,n])=>s+n,0)-e.contents.reduce((s,[,n])=>s+n,0),Ct=(e,t)=>Math.max(...t.contents.map(([,s])=>s))-Math.max(...e.contents.map(([,s])=>s)),tt=(e,t,s={})=>{const n={};return Z(t,e,{boost:{h:2,t:1,c:4},prefix:!0,...s}).forEach(o=>{const{id:r,terms:i,score:c}=o,h=r.includes("@"),u=r.includes("#"),[d,a]=r.split(/[#@]/),m=Number(d),g=i.sort((l,f)=>l.length-f.length).filter((l,f)=>i.slice(f+1).every(w=>!w.includes(l))),{contents:y}=n[m]??={title:"",contents:[]};if(h)y.push([{type:"customField",id:m,index:a,display:g.map(l=>o.c.map(f=>V(f,l))).flat().filter(l=>l!==null)},c]);else{const l=g.map(f=>V(o.h,f)).filter(f=>f!==null);if(l.length&&y.push([{type:u?"heading":"title",id:m,...u&&{anchor:a},display:l},c]),"t"in o&&o.t)for(const f of o.t){const w=g.map(p=>V(f,p)).filter(p=>p!==null);w.length&&y.push([{type:"text",id:m,...u&&{anchor:a},display:w},c])}}}),$(n).sort(([,o],[,r])=>"max"==="total"?Ot(o,r):Ct(o,r)).map(([o,{title:r,contents:i}])=>{if(!r){const c=it(t,o);c&&(r=c.h)}return{title:r,contents:i.map(([c])=>c)}})},et=(e,t,s={})=>{const n=zt(t,e,{fuzzy:.2,maxFuzzy:3,...s}).map(({suggestion:o})=>o);return e.includes(" ")?n:n.filter(o=>!o.includes(" "))},St=st($(JSON.parse("{\"/\":{\"documentCount\":32,\"nextId\":32,\"documentIds\":{\"0\":\"0\",\"1\":\"1\",\"2\":\"1#娱乐性对局\",\"3\":\"1#_1-静悄悄\",\"4\":\"1#_2-超级动物大复健\",\"5\":\"1#_3-吵死了\",\"6\":\"1#_4-无限火力\",\"7\":\"1#_5-愿者上钩\",\"8\":\"1#_6-狂轰滥炸\",\"9\":\"1#_7-鹰眼特训-不是\",\"10\":\"1#_8-超级紫晶大乱斗\",\"11\":\"1#_9-蕉神保佑我\",\"12\":\"1#_10-心眼子大作战\",\"13\":\"1#_11-我是强弓\",\"14\":\"1#_12-超级手枪大作战\",\"15\":\"1#_13-蛋-仔派对\",\"16\":\"1#_14-绝命毒师\",\"17\":\"1#_15-超级火力大拼杀\",\"18\":\"1#_16-狙狙你的\",\"19\":\"1#竞技性对局\",\"20\":\"1#_1-左轮沙鹰-刷新率1-2\",\"21\":\"1#_2-猎枪狙击枪-刷新率1-2\",\"22\":\"1#_3-喷子豹喷-刷新率1-2\",\"23\":\"1#_4-弓弩-刷新率1-2\",\"24\":\"1#_5-bcg-刷新率1-2\",\"25\":\"1#_6-冲锋及上级-ak及上级-刷新率1-2\",\"26\":\"1#_7-消音-刷新率1-2\",\"27\":\"1#_8-毒镖蝇镖-刷新率1-2\",\"28\":\"1#_9-手枪-刷新率1-2\",\"29\":\"1#_10-弹速x1-2\",\"30\":\"1#_11-紫金枪-刷新率1-2\",\"31\":\"2\"},\"fieldIds\":{\"h\":0,\"t\":1,\"c\":2},\"fieldLength\":{\"0\":[1],\"1\":[1],\"2\":[1,8],\"3\":[3,9],\"4\":[3,6],\"5\":[3,8],\"6\":[3,9],\"7\":[3,7],\"8\":[3,7],\"9\":[4,6],\"10\":[3,8],\"11\":[3,11],\"12\":[3,6],\"13\":[3,6],\"14\":[3,6],\"15\":[4,8],\"16\":[3,9],\"17\":[3,8],\"18\":[3,11],\"19\":[1,15],\"20\":[3],\"21\":[2],\"22\":[3],\"23\":[3],\"24\":[3],\"25\":[3],\"26\":[3],\"27\":[3],\"28\":[3],\"29\":[3],\"30\":[3],\"31\":[1,3]},\"averageFieldLength\":[2.71875,7.2625],\"storedFields\":{\"0\":{\"h\":\"文档目录\"},\"1\":{\"h\":\"微光杯比赛模式详解\"},\"2\":{\"h\":\"娱乐性对局\",\"t\":[\"总设置\",\"默认没有 鸸鹋、仓鼠球\",\"有的话是模式没有写出来\",\"规则：随机抽取编号，按照编号修改游戏设置\"]},\"3\":{\"h\":\"1-“静悄悄”\",\"t\":[\"玩法：武器只刷新镖枪及其上级，弓，弩和消音手枪。神器只刷新忍者足具，不刷新投掷物，其他正常\",\"积分方式：按照存活排名\"]},\"4\":{\"h\":\"2-“超级动物大复健”\",\"t\":[\"玩法：无武器，投掷物只刷新烟和香蕉，不能翻滚\",\"积分方式：按照存活排名\"]},\"5\":{\"h\":\"3-“吵死了”\",\"t\":[\"玩法：武器仅刷新左轮，猎枪及其上级，不刷新神器，投掷物只刷新手雷，其他正常\",\"积分方式：按照存活排名\"]},\"6\":{\"h\":\"4-“无限火力”\",\"t\":[\"玩法：武器只刷新AK及其上级,冲锋及其上级以及机枪。射速x1.5 伤害x0.75\",\"积分方式：按照存活排名\"]},\"7\":{\"h\":\"5-“愿者上钩”\",\"t\":[\"玩法：子弹速度最慢，无法翻滚，无投掷物，无神器\",\"积分方式：按照存活排名\"]},\"8\":{\"h\":\"6-“狂轰滥炸”\",\"t\":[\"玩法：只刷新投掷物（刷新概率提高） 不刷新武器和甲，其他正常\",\"积分方式：按照存活排名\"]},\"9\":{\"h\":\"7-“鹰眼特训（不是）”\",\"t\":[\"玩法：武器只刷新猎枪和狙，不刷新投掷物，其他正常\",\"积分方式：按照存活排名\"]},\"10\":{\"h\":\"8-“超级紫晶大乱斗”\",\"t\":[\"玩法：只刷新紫晶枪和投掷物，伤害x0.65 弹速x2.0\",\"积分方式：按照存活排名\"]},\"11\":{\"h\":\"9-“蕉神保佑我”\",\"t\":[\"玩法：只刷新香蕉（刷新率5.0）圈速度x2.0 武器（只有刀）伤害x1.2\",\"积分排名：按照存活排名\"]},\"12\":{\"h\":\"10-“心眼子大作战”\",\"t\":[\"玩法：只刷新滑索香蕉猫雷（刷新率1.5）\",\"积分方式：按照存活排名\"]},\"13\":{\"h\":\"11-“我是强弓！”\",\"t\":[\"玩法：仅刷新弓弩和烟（刷新率均1.5）\",\"积分方式：按照存活排名\"]},\"14\":{\"h\":\"12-“超级手枪大作战”\",\"t\":[\"玩法：只刷新手枪和消音 伤害x0.9\",\"积分方式：按照存活排名\"]},\"15\":{\"h\":\"13-“‘蛋’仔派对”\",\"t\":[\"玩法：只刷新BCG 伤害x0.85 BCG刷新率5.0\",\"积分方式：按照存活排名\"]},\"16\":{\"h\":\"14-“绝命毒师”\",\"t\":[\"玩法：只刷新毒镖和烟（刷新率1.25） 伤害x0.6 弹速x1.25\",\"积分方式：按照存活排名\"]},\"17\":{\"h\":\"15-“超级火力大拼杀”\",\"t\":[\"玩法：沿航线投放机枪且不自然刷新任何枪 伤害x0.4 毒气圈速度x0.9\",\"积分方式：按照存活排名\"]},\"18\":{\"h\":\"16-“狙狙你的”\",\"t\":[\"玩法：只刷新狙击枪和猎枪，沿航线投放金狙。伤害x0.5。 狙击枪、猎枪刷新率5.0（防止没有子弹）\",\"积分方式：按照存活排名\"]},\"19\":{\"h\":\"竞技性对局\",\"t\":[\"总设置\",\"毒圈 速度x0.9毒圈 伤害x1.5滑索 刷新率0.2机枪 刷新率0.5 禁用 鸸鹋、仓鼠球\",\"规则：随机抽取编号，按照编号修改游戏设置\"]},\"20\":{\"h\":\"1- 刷新率1.2\"},\"21\":{\"h\":\"2- 刷新率1.2\"},\"22\":{\"h\":\"3- 刷新率1.2\"},\"23\":{\"h\":\"4- 刷新率1.2\"},\"24\":{\"h\":\"5- 刷新率1.2\"},\"25\":{\"h\":\"6- 刷新率1.2\"},\"26\":{\"h\":\"7- 刷新率1.2\"},\"27\":{\"h\":\"8- 刷新率1.2\"},\"28\":{\"h\":\"9- 刷新率1.2\"},\"29\":{\"h\":\"10- x1.2\"},\"30\":{\"h\":\"11- 刷新率1.2\"},\"31\":{\"h\":\"\",\"t\":[\"404 Not Found\"]}},\"dirtCount\":0,\"index\":[[\"found\",{\"1\":{\"31\":1}}],[\"not\",{\"1\":{\"31\":1}}],[\"x1\",{\"0\":{\"29\":1}}],[\"禁用\",{\"1\":{\"19\":1}}],[\"速度x0\",{\"1\":{\"19\":1}}],[\"毒圈\",{\"1\":{\"19\":1}}],[\"毒气圈速度x0\",{\"1\":{\"17\":1}}],[\"竞技性对局\",{\"0\":{\"19\":1}}],[\"防止没有子弹\",{\"1\":{\"18\":1}}],[\"猎枪刷新率5\",{\"1\":{\"18\":1}}],[\"猎枪及其上级\",{\"1\":{\"5\":1}}],[\"狙击枪\",{\"1\":{\"18\":1}}],[\"狙狙你的\",{\"0\":{\"18\":1}}],[\"沿航线投放金狙\",{\"1\":{\"18\":1}}],[\"沿航线投放机枪且不自然刷新任何枪\",{\"1\":{\"17\":1}}],[\"弹速x1\",{\"1\":{\"16\":1}}],[\"弹速x2\",{\"1\":{\"10\":1}}],[\"绝命毒师\",{\"0\":{\"16\":1}}],[\"bcg刷新率5\",{\"1\":{\"15\":1}}],[\"仔派对\",{\"0\":{\"15\":1}}],[\"蛋\",{\"0\":{\"15\":1}}],[\"仅刷新弓弩和烟\",{\"1\":{\"13\":1}}],[\"我是强弓\",{\"0\":{\"13\":1}}],[\"心眼子大作战\",{\"0\":{\"12\":1}}],[\"积分排名\",{\"1\":{\"11\":1}}],[\"积分方式\",{\"1\":{\"3\":1,\"4\":1,\"5\":1,\"6\":1,\"7\":1,\"8\":1,\"9\":1,\"10\":1,\"12\":1,\"13\":1,\"14\":1,\"15\":1,\"16\":1,\"17\":1,\"18\":1}}],[\"伤害x1\",{\"1\":{\"11\":1,\"19\":1}}],[\"伤害x0\",{\"1\":{\"6\":1,\"10\":1,\"14\":1,\"15\":1,\"16\":1,\"17\":1,\"18\":1}}],[\"只有刀\",{\"1\":{\"11\":1}}],[\"只刷新狙击枪和猎枪\",{\"1\":{\"18\":1}}],[\"只刷新毒镖和烟\",{\"1\":{\"16\":1}}],[\"只刷新bcg\",{\"1\":{\"15\":1}}],[\"只刷新手枪和消音\",{\"1\":{\"14\":1}}],[\"只刷新滑索香蕉猫雷\",{\"1\":{\"12\":1}}],[\"只刷新香蕉\",{\"1\":{\"11\":1}}],[\"只刷新紫晶枪和投掷物\",{\"1\":{\"10\":1}}],[\"只刷新投掷物\",{\"1\":{\"8\":1}}],[\"圈速度x2\",{\"1\":{\"11\":1}}],[\"刷新率0\",{\"1\":{\"19\":2}}],[\"刷新率均1\",{\"1\":{\"13\":1}}],[\"刷新率1\",{\"0\":{\"20\":1,\"21\":1,\"22\":1,\"23\":1,\"24\":1,\"25\":1,\"26\":1,\"27\":1,\"28\":1,\"30\":1},\"1\":{\"12\":1,\"16\":1}}],[\"刷新率5\",{\"1\":{\"11\":1}}],[\"刷新概率提高\",{\"1\":{\"8\":1}}],[\"蕉神保佑我\",{\"0\":{\"11\":1}}],[\"9毒圈\",{\"1\":{\"19\":1}}],[\"9\",{\"0\":{\"11\":1,\"28\":1},\"1\":{\"14\":1,\"17\":1}}],[\"0\",{\"1\":{\"10\":1,\"11\":2,\"15\":1,\"18\":1}}],[\"超级火力大拼杀\",{\"0\":{\"17\":1}}],[\"超级手枪大作战\",{\"0\":{\"14\":1}}],[\"超级紫晶大乱斗\",{\"0\":{\"10\":1}}],[\"超级动物大复健\",{\"0\":{\"4\":1}}],[\"85\",{\"1\":{\"15\":1}}],[\"8\",{\"0\":{\"10\":1,\"27\":1}}],[\"鹰眼特训\",{\"0\":{\"9\":1}}],[\"7\",{\"0\":{\"9\":1,\"26\":1}}],[\"75\",{\"1\":{\"6\":1}}],[\"狂轰滥炸\",{\"0\":{\"8\":1}}],[\"65\",{\"1\":{\"10\":1}}],[\"6\",{\"0\":{\"8\":1,\"25\":1},\"1\":{\"16\":1}}],[\"子弹速度最慢\",{\"1\":{\"7\":1}}],[\"愿者上钩\",{\"0\":{\"7\":1}}],[\"5滑索\",{\"1\":{\"19\":1}}],[\"5\",{\"0\":{\"7\":1,\"24\":1},\"1\":{\"6\":1,\"12\":1,\"13\":1,\"18\":1,\"19\":1}}],[\"射速x1\",{\"1\":{\"6\":1}}],[\"冲锋及其上级以及机枪\",{\"1\":{\"6\":1}}],[\"无神器\",{\"1\":{\"7\":1}}],[\"无投掷物\",{\"1\":{\"7\":1}}],[\"无法翻滚\",{\"1\":{\"7\":1}}],[\"无限火力\",{\"0\":{\"6\":1}}],[\"无武器\",{\"1\":{\"4\":1}}],[\"404\",{\"1\":{\"31\":1}}],[\"4\",{\"0\":{\"6\":1,\"23\":1},\"1\":{\"17\":1}}],[\"投掷物只刷新手雷\",{\"1\":{\"5\":1}}],[\"投掷物只刷新烟和香蕉\",{\"1\":{\"4\":1}}],[\"武器\",{\"1\":{\"11\":1}}],[\"武器只刷新猎枪和狙\",{\"1\":{\"9\":1}}],[\"武器只刷新ak及其上级\",{\"1\":{\"6\":1}}],[\"武器只刷新镖枪及其上级\",{\"1\":{\"3\":1}}],[\"武器仅刷新左轮\",{\"1\":{\"5\":1}}],[\"吵死了\",{\"0\":{\"5\":1}}],[\"3\",{\"0\":{\"5\":1,\"22\":1}}],[\"不是\",{\"0\":{\"9\":1}}],[\"不刷新武器和甲\",{\"1\":{\"8\":1}}],[\"不刷新神器\",{\"1\":{\"5\":1}}],[\"不刷新投掷物\",{\"1\":{\"3\":1,\"9\":1}}],[\"不能翻滚\",{\"1\":{\"4\":1}}],[\"2机枪\",{\"1\":{\"19\":1}}],[\"25\",{\"1\":{\"16\":2}}],[\"2\",{\"0\":{\"4\":1,\"20\":1,\"21\":2,\"22\":1,\"23\":1,\"24\":1,\"25\":1,\"26\":1,\"27\":1,\"28\":1,\"29\":1,\"30\":1},\"1\":{\"11\":1}}],[\"按照存活排名\",{\"1\":{\"3\":1,\"4\":1,\"5\":1,\"6\":1,\"7\":1,\"8\":1,\"9\":1,\"10\":1,\"11\":1,\"12\":1,\"13\":1,\"14\":1,\"15\":1,\"16\":1,\"17\":1,\"18\":1}}],[\"按照编号修改游戏设置\",{\"1\":{\"2\":1,\"19\":1}}],[\"其他正常\",{\"1\":{\"3\":1,\"5\":1,\"8\":1,\"9\":1}}],[\"神器只刷新忍者足具\",{\"1\":{\"3\":1}}],[\"弩和消音手枪\",{\"1\":{\"3\":1}}],[\"弓\",{\"1\":{\"3\":1}}],[\"玩法\",{\"1\":{\"3\":1,\"4\":1,\"5\":1,\"6\":1,\"7\":1,\"8\":1,\"9\":1,\"10\":1,\"11\":1,\"12\":1,\"13\":1,\"14\":1,\"15\":1,\"16\":1,\"17\":1,\"18\":1}}],[\"静悄悄\",{\"0\":{\"3\":1}}],[\"16\",{\"0\":{\"18\":1}}],[\"15\",{\"0\":{\"17\":1}}],[\"14\",{\"0\":{\"16\":1}}],[\"13\",{\"0\":{\"15\":1}}],[\"12\",{\"0\":{\"14\":1}}],[\"11\",{\"0\":{\"13\":1,\"30\":1}}],[\"10\",{\"0\":{\"12\":1,\"29\":1}}],[\"1\",{\"0\":{\"3\":1,\"20\":1}}],[\"随机抽取编号\",{\"1\":{\"2\":1,\"19\":1}}],[\"规则\",{\"1\":{\"2\":1,\"19\":1}}],[\"有的话是模式没有写出来\",{\"1\":{\"2\":1}}],[\"仓鼠球\",{\"1\":{\"2\":1,\"19\":1}}],[\"鸸鹋\",{\"1\":{\"2\":1,\"19\":1}}],[\"默认没有\",{\"1\":{\"2\":1}}],[\"总设置\",{\"1\":{\"2\":1,\"19\":1}}],[\"娱乐性对局\",{\"0\":{\"2\":1}}],[\"微光杯比赛模式详解\",{\"0\":{\"1\":1}}],[\"文档目录\",{\"0\":{\"0\":1}}]],\"version\":2}}")).map(([e,t])=>[e,Mt(t,{fields:["h","t","c"],storeFields:["h","t","c"]})]));self.onmessage=({data:{type:e="all",query:t,locale:s,options:n,id:o}})=>{const r=St[s];e==="suggest"?self.postMessage([e,o,et(t,r,n)]):e==="search"?self.postMessage([e,o,tt(t,r,n)]):self.postMessage({suggestions:[e,o,et(t,r,n)],results:[e,o,tt(t,r,n)]})};
//# sourceMappingURL=index.js.map
